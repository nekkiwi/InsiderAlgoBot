name: Daily InsiderAlgobot - 1w 5%

on:
  schedule:
    - cron: '00 14 * * *'  # Every day at 14:00 UTC
  workflow_dispatch:      # Allows manual run from GitHub

jobs:
  run-insideralgobot-short:
    runs-on: ubuntu-latest

    env:
      # Secrets for your bot
      ALPACA_API_KEY: ${{ secrets.ALPACA_API_KEY }}
      ALPACA_API_SECRET_KEY: ${{ secrets.ALPACA_API_SECRET_KEY }}
      
      # Secrets for Google Drive access
      GOOGLE_SHEET_CREDS_JSON: ${{ secrets.GOOGLE_SHEET_CREDS_JSON }}
      GDRIVE_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}

      # --- Customizable Parameters ---
      # Change these values to alter the model and script behavior
      TIMEPOINT: '1w'
      THRESHOLD_PCT: '5' # The numeric value for the percentage threshold
      ALLOCATION_PCT: '2'

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12.4'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install alpaca-trade-api==3.2.0 --no-deps

      - name: Install rclone
        run: |
          curl https://rclone.org/install.sh | sudo bash

      - name: Download models from Google Drive
        env:
          # This configures rclone to access Google Drive using your service account
          RCLONE_CONFIG_GDRIVE_TYPE: drive
          RCLONE_CONFIG_GDRIVE_SCOPE: drive.readonly
          RCLONE_CONFIG_GDRIVE_SERVICE_ACCOUNT_CREDENTIALS: ${{ secrets.GOOGLE_SHEET_CREDS_JSON }}
        run: |
          # Construct the subfolder name from the environment variables
          SUBFOLDER_NAME="LightGBM_alpha_${{ env.TIMEPOINT }}_${{ env.THRESHOLD_PCT }}pct"

          # Create the local target directory
          mkdir -p "data/models/${SUBFOLDER_NAME}"

          # Download all files from the corresponding Google Drive subfolder
          rclone copy "gdrive,root_folder_id=${{ env.GDRIVE_FOLDER_ID }}:${SUBFOLDER_NAME}/" "data/models/${SUBFOLDER_NAME}/"
          echo "Model download complete."

      - name: Run bot
        run: |
          python run_bot.py --timepoint ${{ env.TIMEPOINT }} --threshold_pct ${{ env.THRESHOLD_PCT }} --allocation_pct ${{ env.ALLOCATION_PCT }}
